spring.application.name=user
# ? ??? ??? ???? ???? ??
spring.main.allow-bean-definition-overriding=true 
# ??? ?? ?? : 8081
server.port=8083

# ??? ?? - MSA
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# ??? ??? ??? ??, ????(?? ?? ??? ?? ?? ??)
# ??? ?? ???? ??? ???, ??? ???? ?? -> ???? ??
# ?? 30? -> 15? ?? ?? : ??? ??
eureka.instance.lease-renewal-interval-in-seconds=15
# ?? 90? -> 20? ?? ??
eureka.instance.lease-expiration-duration-in-seconds=20
# ??? ??? ??? ?????? ?????? ?? ??? ??? ??!!
#spring.cloud.compatibility-verifier.enabled=false
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true

# RDS - mysql
spring.datasource.url=jdbc:mysql://localhost:3306/miniproject
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=p1234

# No-SQL - redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.repositories.enabled=false

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=true

# JWT - access/refresh ?? ?? -> ????, ????(?????? ??) -> ????
jwt.token.raw_secret_key=ee307329f2112629066634f34e18a07c060bbf6a9b17f2d28327659cdc566bf6
# access token ???? -> 1??
# 3600?->60?->1?? -> ???? ?? 000? ??
jwt.access-token-expiration=25200000
# refresh token ???? -> 7?
jwt.refresh-token-expiration=604800000

# ?? ??? ??
# ?? -> ?? -> 2?? ???? ??(????)? ??? ?? -> ? ???? ??
# ? ?? ?? -> ?? -> ?? ???
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=culllau0@gmail.com
spring.mail.password=thok oqwl ehow mmcu
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.starttls.enable=true

# kafka (??).
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=test-group
spring.kafka.listener.missing-topics-fatal=false

# ? ??? URL (?? ??, ?? ??, ?? ??,..)